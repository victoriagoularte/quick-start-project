import io.gitlab.arturbosch.detekt.Detekt

plugins {
    id 'com.android.application' version '8.0.2' apply false
    id 'com.android.library' version '8.0.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.7.20' apply false
    id("com.google.dagger.hilt.android") version "2.44" apply false
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.1' apply false
    id "org.jlleitschuh.gradle.ktlint" version "11.5.0"
    id 'io.gitlab.arturbosch.detekt' version '1.23.0' apply false
}

subprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint"
    apply plugin: "io.gitlab.arturbosch.detekt"

    ktlint {
        version = "0.50.0"
        android = true
        verbose = true
        reporters {
            reporter "html"
        }
        filter {
            include("**/*.kt")
            exclude("**/build/**")
        }
    }

    detekt {
        parallel = true
        allRules = true
        autoCorrect = true
        buildUponDefaultConfig = true
        setSource(files(projectDir))
        config.setFrom(file("${rootProject.rootDir}/config/detekt/detekt.yml"))
    }

    tasks.withType(Detekt).configureEach {
        // Detekt leveraging Gradle's SourceTask: https://detekt.dev/docs/gettingstarted/gradle/#leveraging-gradles-sourcetask---excluding-and-including-source-files
        include("**/*.kt")
        exclude("**/build/**")
        jvmTarget = JavaVersion.VERSION_11

        reports {
            txt.required.set(false)
            sarif.required.set(false)
            md.required.set(false)
            html.required.set(true)
            html.outputLocation.set(file("${project.buildDir}/reports/detekt/detekt.html"))
            xml.required.set(true)
            xml.outputLocation.set(file("${project.buildDir}/reports/detekt/detekt.xml"))
            // It's required for Sonar
        }
    }
}

tasks.named('wrapper') {
    description = "Gradle wrapper task to update binary"
    gradleVerion = "8.0"
    distributionType = Wrapper.DistributionType.BIN
}